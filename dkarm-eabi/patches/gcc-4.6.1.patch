diff -Nbaur gcc-4.6.0/gcc/config/arm/t-arm-elf gcc-4.6.0-arm/gcc/config/arm/t-arm-elf
--- gcc-4.6.0/gcc/config/arm/t-arm-elf	2011-01-03 20:52:22.000000000 +0000
+++ gcc-4.6.0-arm/gcc/config/arm/t-arm-elf	2011-04-06 00:05:22.000000000 +0100
@@ -40,22 +40,22 @@
 #MULTILIB_DIRNAMES    += fa526 fa626 fa606te fa626te fmp626 fa726te
 #MULTILIB_EXCEPTIONS  += *mthumb*/*mcpu=fa526 *mthumb*/*mcpu=fa626
 
-#MULTILIB_OPTIONS      += march=armv7
-#MULTILIB_DIRNAMES     += thumb2
-#MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
-#MULTILIB_MATCHES      += march?armv7=march?armv7-a
-#MULTILIB_MATCHES      += march?armv7=march?armv7-r
-#MULTILIB_MATCHES      += march?armv7=march?armv7-m
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
-#MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
+MULTILIB_OPTIONS      += march=armv7
+MULTILIB_DIRNAMES     += thumb2
+MULTILIB_EXCEPTIONS   += march=armv7* marm/*march=armv7*
+MULTILIB_MATCHES      += march?armv7=march?armv7-a
+MULTILIB_MATCHES      += march?armv7=march?armv7-r
+MULTILIB_MATCHES      += march?armv7=march?armv7-m
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-a8
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-r4
+MULTILIB_MATCHES      += march?armv7=mcpu?cortex-m3
 
 # Not quite true.  We can support hard-vfp calling in Thumb2, but how do we
 # express that here?  Also, we really need architecture v5e or later
 # (mcrr etc).
-MULTILIB_OPTIONS       += mfloat-abi=hard
-MULTILIB_DIRNAMES      += fpu
-MULTILIB_EXCEPTIONS    += *mthumb/*mfloat-abi=hard*
+#MULTILIB_OPTIONS       += mfloat-abi=hard
+#MULTILIB_DIRNAMES      += fpu
+#MULTILIB_EXCEPTIONS    += *mthumb/*mfloat-abi=hard*
 #MULTILIB_EXCEPTIONS    += *mcpu=fa526/*mfloat-abi=hard*
 #MULTILIB_EXCEPTIONS    += *mcpu=fa626/*mfloat-abi=hard*
 
@@ -63,9 +63,9 @@
 # MULTILIB_DIRNAMES   += ep9312
 # MULTILIB_EXCEPTIONS += *mthumb/*mcpu=ep9312*
 # 	
-# MULTILIB_OPTIONS     += mlittle-endian/mbig-endian
-# MULTILIB_DIRNAMES    += le be
-# MULTILIB_MATCHES     += mbig-endian=mbe mlittle-endian=mle
+MULTILIB_OPTIONS     += mlittle-endian/mbig-endian
+MULTILIB_DIRNAMES    += le be
+MULTILIB_MATCHES     += mbig-endian=mbe mlittle-endian=mle
 # 
 # MULTILIB_OPTIONS    += mhard-float/msoft-float
 # MULTILIB_DIRNAMES   += fpu soft
diff -Nbaur gcc-4.6.0/gcc/config/arm/unknown-elf.h gcc-4.6.0-arm/gcc/config/arm/unknown-elf.h
--- gcc-4.6.0/gcc/config/arm/unknown-elf.h	2011-01-03 20:52:22.000000000 +0000
+++ gcc-4.6.0-arm/gcc/config/arm/unknown-elf.h	2011-04-06 00:00:19.000000000 +0100
@@ -97,4 +97,4 @@
    udivmoddi4, which will depend on the exception unwind routines,
    which will depend on abort, which is defined in libc.  */ 
 #undef LINK_GCC_C_SEQUENCE_SPEC
-#define LINK_GCC_C_SEQUENCE_SPEC "--start-group %G %L --end-group"
+#define LINK_GCC_C_SEQUENCE_SPEC "--start-group %G %L %(libgloss) --end-group"
diff -Nbaur gcc-4.6.0/gcc/gcc.c gcc-4.6.0-arm/gcc/gcc.c
--- gcc-4.6.0/gcc/gcc.c	2011-02-23 02:04:43.000000000 +0000
+++ gcc-4.6.0-arm/gcc/gcc.c	2011-04-06 00:00:19.000000000 +0100
@@ -547,6 +547,11 @@
 #endif
 #endif
 
+#ifndef LIBGLOSS_SPEC
+# define LIBGLOSS_SPEC "-lsysbase"
+#endif
+
+
 /* config.h can define STARTFILE_SPEC to override the default crt0 files.  */
 #ifndef STARTFILE_SPEC
 #define STARTFILE_SPEC  \
@@ -702,6 +707,7 @@
 static const char *mflib_spec = MFLIB_SPEC;
 static const char *link_gomp_spec = "";
 static const char *libgcc_spec = LIBGCC_SPEC;
+static const char *libgloss_spec = LIBGLOSS_SPEC;
 static const char *endfile_spec = ENDFILE_SPEC;
 static const char *startfile_spec = STARTFILE_SPEC;
 static const char *linker_name_spec = LINKER_NAME;
@@ -1180,6 +1186,7 @@
   INIT_STATIC_SPEC ("mflib",			&mflib_spec),
   INIT_STATIC_SPEC ("link_gomp",		&link_gomp_spec),
   INIT_STATIC_SPEC ("libgcc",			&libgcc_spec),
+  INIT_STATIC_SPEC ("libgloss",			&libgloss_spec),
   INIT_STATIC_SPEC ("startfile",		&startfile_spec),
   INIT_STATIC_SPEC ("cross_compile",		&cross_compile),
   INIT_STATIC_SPEC ("version",			&compiler_version),
diff -Nbaur gcc-4.6.0/gcc/sched-deps.c gcc-4.6.0-arm/gcc/sched-deps.c
--- gcc-4.6.0/gcc/sched-deps.c	2011-02-03 06:04:04.000000000 +0000
+++ gcc-4.6.0-arm/gcc/sched-deps.c	2011-04-06 00:00:19.000000000 +0100
@@ -2271,6 +2271,12 @@
 			      FIRST_STACK_REG + nregs);
 	}
 #endif
+
+      /* If the stack pointer is being modified, flush out all memory
+	 references as they may become invalid if moved across the
+	 stack adjustment.  */
+      if (dest == stack_pointer_rtx)
+	flush_pending_lists (deps, insn, true, true);
     }
   else if (MEM_P (dest))
     {
diff -Nbaur gcc-4.6.0/libcpp/Makefile.in gcc-4.6.0-arm/libcpp/Makefile.in
--- gcc-4.6.0/libcpp/Makefile.in	2011-03-25 17:07:00.000000000 +0000
+++ gcc-4.6.0-arm/libcpp/Makefile.in	2011-04-06 00:00:29.000000000 +0100
@@ -212,8 +212,7 @@
 # Note that we put the dependencies into a .Tpo file, then move them
 # into place if the compile succeeds.  We need this because gcc does
 # not atomically write the dependency output file.
-COMPILE = $(COMPILE.base) -o $@ -MT $@ -MMD -MP -MF $(DEPDIR)/$*.Tpo
-POSTCOMPILE = @mv $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
+COMPILE = $(COMPILE.base) -o $@
 else
 COMPILE = source='$<' object='$@' libtool=no DEPDIR=$(DEPDIR) $(DEPMODE) \
 	  $(depcomp) $(COMPILE.base)
